name: wdi5 tests

on:
  pull_request:
    branches:
      - main

jobs:
  test-wdi5:
    runs-on: ubuntu-22.04
    if: "github.event.pull_request.title != 'chore: release main' && !github.event.pull_request.draft"
    permissions:
      contents: read
      actions: write
    strategy:
      fail-fast: false
      matrix:
        scenario:
          ['ordersv2fe', 'ordersv4fe', 'ordersv2fenondraft', 'ordersv2freestylenondraftopenui5', 'ordersv2freestylenondraft', 'ordersv4freestyle']
        ui5version: [136, 120, 108, 96, 84, 71] # 136 is the new default version
        exclude:
          - scenario: ordersv4fe
            ui5version: 71
          - scenario: ordersv4freestyle
            ui5version: 71
          - scenario: ordersv4freestyle
            ui5version: 84
          - scenario: ordersv4freestyle
            ui5version: 96
          - scenario: ordersv4freestyle
            ui5version: 108

    steps:
      # - name: update chrome
      #   run: |
      #     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
      #     sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
      #     sudo apt-get update
      #     sudo apt-get --only-upgrade install google-chrome-stable
      #     # check chrome version
      #     google-chrome --version
      - name: update APT cache
        run: sudo apt-get update -y

      - name: install gnome-keyring
        run: sudo apt install gnome-keyring

      - name: checkout spreadsheetupload Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: use node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # log npm version
      - name: log npm version
        run: npm --version

      - name: get port
        run: |
          TESTAPPPORT=$(node ./dev/get-port.js ${{ matrix.scenario }} ${{ matrix.ui5version }})
          echo "TESTAPPPORT=$TESTAPPPORT" >> $GITHUB_ENV

      - name: Remove cds-plugin-ui5
        run: |
          cd examples/packages/server
          node -e "const fs = require('fs'); \
                    const pkg = require('./package.json'); \
                    delete pkg.devDependencies['cds-plugin-ui5']; \
                    delete pkg.cds['cds-plugin-ui5']; \
                    fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));"

      - name: npm install
        run: |
          npm pkg delete scripts.prepare
          npm install --legacy-peer-deps

      - name: copy test apps
        run: npm run copyTestApps

      - name: Run Build
        run: npm run build

      - name: install @sap/cds-dk@8.8.2
        run: |
          npm i -g @sap/cds-dk@8.8.2

      # run app      # wait for cap server to install ui5 component, remove when switch to fiori tools
      - name: start cap server
        run: |
          npm run start:server &

      - name: start app ${{ matrix.scenario }} ui5 ${{ matrix.ui5version }}
        if: matrix.scenario != 'ordersv4fecds'
        run: |
          npm run start:silent --workspace=${{ matrix.scenario }}${{ matrix.ui5version }} &

      # run wdi5 tests
      - name: test wdi5 ${{ matrix.scenario }} ui5 ${{ matrix.ui5version }}
        id: wdi5_test
        if: matrix.scenario != 'ordersv4fecds'
        continue-on-error: true
        run: |
          # wait for port 4004 with 60 second timeout
          timeout 60 bash -c 'until nc -z localhost 4004; do sleep 0.1; done' || (echo "Port 4004 not available after 60 seconds" && exit 1)
          # wait for test app port with 60 second timeout
          timeout 60 bash -c 'until nc -z localhost ${{ env.TESTAPPPORT }}; do sleep 0.1; done' || (echo "Port ${{ env.TESTAPPPORT }} not available after 60 seconds" && exit 1)
          npm run test --workspace=ui5-cc-spreadsheetimporter-sample -- -- --headless ${{ matrix.scenario }} ${{ matrix.ui5version }}

      # special case for ordersv4fecds
      - name: wait for ${{ matrix.scenario }} ui5 ${{ matrix.ui5version }}
        if: matrix.scenario == 'ordersv4fecds'
        run: |
          while ! nc -z localhost 4004; do sleep 0.1; done
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:4004/ui.v4.ordersv4fecds/index.html)" != "200" ]]; do sleep 5; done

      # special case for ordersv4fecds
      - name: test wdi5 ${{ matrix.scenario }} ui5 ${{ matrix.ui5version }}
        if: matrix.scenario == 'ordersv4fecds'
        run: |
          npm run test --workspace=ui5-cc-spreadsheetimporter-sample -- -- --headless ${{ matrix.scenario }} ${{ matrix.ui5version }}

      - name: Upload Timeline Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: timeline-report-${{ matrix.scenario }}-${{ matrix.ui5version }}
          path: ./examples/reports/timeline

      # Optional: Fail the workflow if tests failed
      - name: Check Test Results
        if: always()
        run: |
          if [[ "${{ steps.wdi5_test.outcome }}" == "failure" ]]; then
            exit 1
          fi
