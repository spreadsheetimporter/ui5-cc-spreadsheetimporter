on:
  push:
    branches:
      - main
name: release-please
jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      prs: ${{ steps.release.outputs.prs }}
    permissions:
      deployments: write
      id-token: write
    steps:
      - uses: googleapis/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.GH_WORKFLOW_TOKEN }}
          command: manifest
          monorepo-tags: true
          release-type: node
          separate-pull-requests: false
      - name: log output
        run: |
          echo '${{toJSON(steps.release.outputs)}}'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
        if: ${{ steps.release.outputs.releases_created }}

      - run: npm i -g --force corepack && corepack enable
      - name: use node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
        if: ${{ steps.release.outputs.releases_created }}

      - name: Run pnpm install
        if: ${{ steps.release.outputs.releases_created }}
        run: pnpm install  --no-frozen-lockfile

      - name: Build ui5-cc-spreadsheetimporter
        run: pnpm --filter ui5-cc-spreadsheetimporter build
        if: ${{ steps.release.outputs['packages/ui5-cc-spreadsheetimporter--release_created'] }}

      - name: Publish ui5-cc-spreadsheetimporter to NPM
        if: ${{ steps.release.outputs['packages/ui5-cc-spreadsheetimporter--release_created'] }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          echo ":::: Publishing as $(npm whoami)"
          cd ./packages/ui5-cc-spreadsheetimporter/ && npm publish --provenance
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update the ABAP Deploy Repository
        if: ${{ steps.release.outputs['packages/ui5-cc-spreadsheetimporter--release_created'] }}
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GH_WORKFLOW_TOKEN }}" \
          https://api.github.com/repos/spreadsheetimporter/packed-deployment-abap/actions/workflows/updateversions.yml/dispatches \
          -d '{"ref":"main"}'

  update-prs:
    needs: release-please
    if: needs.release-please.outputs.prs
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    strategy:
      matrix:
        pr: ${{ fromJSON(needs.release-please.outputs.prs) }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup git user
        run: |
          git config --global user.email "ops+robot@npmjs.com"
          git config --global user.name "npm team"
      - run: npm i -g --force corepack && corepack enable
      - name: use node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Update PR ${{ matrix.pr.number }}
        if: ${{ matrix.pr }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_WORKFLOW_TOKEN }}
        run: |
          gh pr checkout ${{ matrix.pr.number }}
          pnpm install
          npm run replaceString
          npm run coypChangelogToDoc
          git add .
          git commit --amend --no-edit
          git push --force
